[{"title":"css、js实现下拉菜单","date":"2017-09-13T08:43:32.000Z","path":"2017/09/13/css、js实现下拉菜单/","text":"css和js实现下拉菜单 下拉菜单是我们经常使用的一种小实例，这里自己用css和介绍分别实现。 css实现 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;html实现菜单&lt;/title&gt; &lt;style type=\"text/css\"&gt; *&#123; margin: 0; padding: 0; list-style: none; text-align: center; font-size: 14px; text-decoration: none; &#125; .nav&#123; height: 40px; width: 550px; background-color: #4D4D4B; padding:0 20px; &#125; .nav-1&gt;li&#123; float: left; width: 20%; line-height: 40px; &#125; a&#123; color: #fff; cursor: pointer; display: block; &#125; a:hover&#123; background-color:blue; &#125; .nav-1&gt;li ul&#123; display: none; &#125; .nav-1&gt;li ul li&#123; background-color: #4D4D4B; margin: 2px; &#125; .nav-1&gt;li:hover ul&#123; display: block; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=\"nav\"&gt; &lt;ul class=\"nav-1\"&gt; &lt;li&gt; &lt;a href=\"#\"&gt;张宠&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=\"#\"&gt;数据结构&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;数据结构&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;数据结构&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;数据结构&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=\"\"&gt;苗悦&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=\"#\"&gt;数据结构&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;数据结构&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;数据结构&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;数据结构&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=\"\"&gt;张宠&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=\"#\"&gt;数据结构&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;数据结构&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;数据结构&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;数据结构&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=\"\"&gt;苗悦&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=\"#\"&gt;数据结构&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;数据结构&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;数据结构&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;数据结构&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=\"\"&gt;张宠&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=\"#\"&gt;数据结构&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;数据结构&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;数据结构&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;数据结构&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 当鼠标不经过时display属性设为none，鼠标离开时display属性设为block.注意下hover的放置的位置即可。 js实现 123456789101112131415161718192021222324252627 function showMenu(item)&#123; item.style.display=\"block\";&#125;function hideMenu(item)&#123; item.style.display=\"none\"&#125;var x=document.getElementsByClassName(\"nav-1\")[0];var mouse=x.getElementsByClassName(\"mouse\");var data=x.getElementsByTagName(\"ul\");window.onload=function()&#123; for (var i = 0; i &lt; data.length; i++) &#123; console.log(data[i]); console.log(mouse[i]); mouse[i].onmouseover=function(num)&#123; return function() &#123; showMenu(data[num]); &#125; &#125;(i) mouse[i].onmouseout=function(num)&#123; return function() &#123; hideMenu(data[num]); &#125; &#125;(i) &#125; &#125; 首先获取到要经过的元素和要隐藏的元素。然后循环设置鼠标进过和离开事件。这个地方有个关键之处，即在设置mouse[i]的mouseover mouseout事件时的下标索引时要注意。如果直接： 12345678for (var i = 0; i &lt; data.length; i++) &#123; mouse[i].onmouseover=function()&#123; showMenu(data[i]); &#125; mouse[i].onmouseout=function()&#123; hideMenu(data[i]); &#125; &#125; 此时`showMenu[i]`中所有的i值都为最后的`data.length`，因为当for循环结束后，此时`showMenu[i]`的i会沿着作用域链向上查找，for循环中的i在循环结束后依然存在，所以此时沿着作用域链查找到i，此时的i为`data.length`。 所以用了闭包来解决此问题，即上面的正确代码。此时将闭包包含在一个匿名函数中，并且此匿名函数包含一个参数num，并按值传入i，此时在沿着作用域链往上寻找时，便找到了num。 此外，函数绑定事件时，此种用“=”绑定，只能是匿名函数。 js3种事件绑定方式： 1. 1&lt;input onclick=\"alert('谢谢支持')\" type=\"button\" value=\"点击我，弹出警告框\" /&gt; 123456&lt;input onclick=\"myAlert()\" type=\"button\" value=\"点击我，弹出警告框\" /&gt; &lt;script type=\"text/javascript\"&gt; function myAlert()&#123; alert(\"谢谢支持\"); &#125; &lt;/script&gt; 2. 123456&lt;input id=\"demo\" type=\"button\" value=\"点击我，显示 type 属性\" /&gt; &lt;script type=\"text/javascript\"&gt; document.getElementById(\"demo\").onclick=function()&#123; alert(this.getAttribute(\"type\")); // this 指当前发生事件的HTML元素，这里是&lt;div&gt;标签 &#125; &lt;/script&gt; 3. 1elementObject.addEventListener(eventName,handle,useCapture);","tags":[]}]